<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="redBack" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABVAD0DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        fPj98c/Df7M3wl8G67qnhBfE154puorAmKGNpmmaymumlclWZyfIYYUMxZxxjJHiMH/BWv4a3TosPw1a
        ffDJPmK18xY0SMyPvK25CEICdrkMcYAJ4rQ/4Kvgf8Mp/CVisjeVrsEoWMAyMU0e/YBAwKliQAA3yk4y
        QMkfC97oHh/wl4M1vw7p1vqF3rXieez06OO8sfJtLG6FwyRzfaC5by1mmaRyxckxqo6s6+FjsdWp1nGD
        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
        e+3bt8v3zntiiiqslsRKpOfxtv1P/9k=
</value>
  </data>
</root>